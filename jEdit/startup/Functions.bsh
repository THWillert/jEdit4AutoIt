/* Functions V1.1, (C) by Thorsten Willert

- V1.1 (10.04.2020)
- Code cleaned up
*/
// Global setting for a file-dialog in macros
boolean FILECHOOSER_SYSTEM = true; // false : jEdit-dialog; true :System-dialog

// Global settings for the Insert_Line.bsh-macro
char LINE_CHAR = '=';

/* FileChooser
================================================================================
Opens a file with the VFSFileChooserDialog from jEdit or the system dialog.

Change this for all macros with a variable at jEdit-startup:
	FILECHOOSER_SYSTEM
		- 	false = jEdit
		-	true = System

Parameters:
	String title
	- 	Dialog title (works only with the system dialog)
		An empty string enables the default title
	String sDir
	- Directory
		An empty string uses the current directory
	bool bMultiselect
	- Multiselection

Returns:
	String[]
	- Array with all files.
	An empty string if nothing is selected.
================================================================================
*/

String[] FileChooser(String title, String sDir, boolean bMultiselect) {
    view = jEdit.getActiveView();

    if (sDir == null) {
        sDir = "";
    }

    try {
        if (! FILECHOOSER_SYSTEM) {
            VFSFileChooserDialog chooser =
            new VFSFileChooserDialog(view, sDir, VFSBrowser.OPEN_DIALOG, bMultiselect);
            files = chooser.getSelectedFiles();
            if (files.getClass().isArray()) {
                return files;
            }

        } else {
            JFileChooser chooser = new JFileChooser(sDir);
            chooser.setMultiSelectionEnabled(bMultiselect);
            if (title != "") {
                chooser.setDialogTitle(title);
            }

            int returnVal = chooser.showOpenDialog(view);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                if (bMultiselect) {
                    fileSelection = chooser.getSelectedFiles();
                    String[] files = new String[fileSelection.length];
                    for (i = 0; i < fileSelection.length; i++) {
                        files[i] = fileSelection[i].getPath();
                    }

                    return files;
                } else {
                    String[] files = { chooser.getSelectedFile().getPath()} ;
                    return files;
                }
            } else {
                String[] files = {""} ;
                return files;
            }
        }
    } catch (NullPointerException e) {
        String[] files = {""} ;
        return files;
    }
}
